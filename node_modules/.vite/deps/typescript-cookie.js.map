{
  "version": 3,
  "sources": ["../../typescript-cookie/dist/typescript-cookie.mjs"],
  "sourcesContent": ["/*! typescript-cookie v1.0.6 | MIT */\nvar index = /*#__PURE__*/Object.freeze({\n    __proto__: null\n});\n\nconst encodeName = (name) => encodeURIComponent(name)\n    .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n    .replace(/[()]/g, escape);\nconst encodeValue = (value) => {\n    return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);\n};\nconst decodeName = decodeURIComponent;\nconst decodeValue = (value) => {\n    if (value[0] === '\"') {\n        value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n};\n\nfunction stringifyAttributes(attributes) {\n    // Copy incoming attributes as to not alter the original object..\n    attributes = Object.assign({}, attributes);\n    if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires != null) {\n        attributes.expires = attributes.expires.toUTCString();\n    }\n    return (Object.entries(attributes)\n        .filter(([key, value]) => value != null && value !== false)\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        .map(([key, value]) => value === true ? `; ${key}` : `; ${key}=${value.split(';')[0]}`)\n        .join(''));\n}\nfunction get(name, decodeValue, decodeName) {\n    const scan = /(?:^|; )([^=]*)=([^;]*)/g;\n    const jar = {};\n    let match;\n    while ((match = scan.exec(document.cookie)) != null) {\n        try {\n            const found = decodeName(match[1]);\n            jar[found] = decodeValue(match[2], found);\n            if (name === found) {\n                break;\n            }\n        }\n        catch (e) { }\n    }\n    return name != null ? jar[name] : jar;\n}\nconst DEFAULT_CODEC = Object.freeze({\n    decodeName: decodeName,\n    decodeValue: decodeValue,\n    encodeName: encodeName,\n    encodeValue: encodeValue\n});\nconst DEFAULT_ATTRIBUTES = Object.freeze({\n    path: '/'\n});\nfunction setCookie(name, value, attributes = DEFAULT_ATTRIBUTES, { encodeValue: encodeValue$1 = encodeValue, encodeName: encodeName$1 = encodeName } = {}) {\n    return (document.cookie = `${encodeName$1(name)}=${encodeValue$1(value, name)}${stringifyAttributes(attributes)}`);\n}\nfunction getCookie(name, { decodeValue: decodeValue$1 = decodeValue, decodeName: decodeName$1 = decodeName } = {}) {\n    return get(name, decodeValue$1, decodeName$1);\n}\nfunction getCookies({ decodeValue: decodeValue$1 = decodeValue, decodeName: decodeName$1 = decodeName } = {}) {\n    return get(undefined, decodeValue$1, decodeName$1);\n}\nfunction removeCookie(name, attributes = DEFAULT_ATTRIBUTES) {\n    setCookie(name, '', Object.assign({}, attributes, {\n        expires: -1\n    }));\n}\n\nfunction init(converter, defaultAttributes) {\n    const api = {\n        set: function (name, value, attributes) {\n            return setCookie(name, value, Object.assign({}, this.attributes, attributes), {\n                encodeValue: this.converter.write\n            });\n        },\n        get: function (name) {\n            if (arguments.length === 0) {\n                return getCookies(this.converter.read);\n            }\n            if (name == null) {\n                return;\n            }\n            return getCookie(name, this.converter.read);\n        },\n        remove: function (name, attributes) {\n            removeCookie(name, Object.assign({}, this.attributes, attributes));\n        },\n        withAttributes: function (attributes) {\n            return init(this.converter, Object.assign({}, this.attributes, attributes));\n        },\n        withConverter: function (converter) {\n            return init(Object.assign({}, this.converter, converter), this.attributes);\n        }\n    };\n    const config = {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n    };\n    return Object.create(api, config);\n}\nvar compat = init({ read: DEFAULT_CODEC.decodeValue, write: DEFAULT_CODEC.encodeValue }, DEFAULT_ATTRIBUTES);\n\nexport { compat as Cookies, DEFAULT_ATTRIBUTES, DEFAULT_CODEC, index as Types, getCookie, getCookies, removeCookie, setCookie };\n"],
  "mappings": "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",
  "names": ["decodeValue", "decodeName", "converter"]
}
